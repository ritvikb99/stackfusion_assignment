{"version":3,"sources":["Components/Register/Register.js","Components/Navigation/Navigation.js","Components/Card/Card.js","Components/CardsList/CardsList.js","Components/SearchBox/SearchBox.js","Components/Scroll/Scroll.js","constants.js","App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Register","props","useState","registerName","setRegisterName","registerEmail","setRegisterEmail","registerPhone","setRegisterPhone","registerDOB","setRegisterDOB","Date","displayMessage","setDisplayMessage","className","id","htmlFor","onChange","event","target","value","type","name","required","pattern","placeholder","min","Number","toISOString","slice","split","max","onClick","test","fetch","method","headers","body","JSON","stringify","email","phone","dateofbirth","then","response","json","data","onRequestUsers","list","document","getElementsByClassName","setTimeout","changeRoute","Navigation","height","width","Card","isVisible","setIsVisible","src","alt","style","color","CardsList","users","map","user","SearchBox","searchChange","Scroll","children","CHANGE_SEARCHFIELD","REQUEST_USERS_PENDING","REQUEST_USERS_SUCCESS","REQUEST_USERS_FAILED","ADD_USER","connect","state","searchField","searchUsers","requestUsers","error","isPending","dispatch","onSearchChange","text","payload","catch","useEffect","route","setRoute","filteredUsers","filter","toLowerCase","includes","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateUsers","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d18e181d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Register.css';\nconst Register = (props) => {\n  const [registerName, setRegisterName] = useState('');\n  const [registerEmail, setRegisterEmail] = useState('');\n  const [registerPhone, setRegisterPhone] = useState('');\n  const [registerDOB, setRegisterDOB] = useState('');\n  const [displayMessage, setDisplayMessage] = useState(new Date());\n  const onEmailChange = (event) => {\n    setRegisterEmail(event.target.value);\n  };\n\n  const onPhoneChange = (event) => {\n    setRegisterPhone(event.target.value);\n  };\n\n  const onNameChange = (event) => {\n    setRegisterName(event.target.value);\n  };\n\n  const onDOBChange = (event) => {\n    setRegisterDOB(event.target.value);\n  };\n\n  const onSubmit = () => {\n    if (registerEmail === '') {\n      setDisplayMessage('no-email');\n    } else if (registerName === '') {\n      setDisplayMessage('no-name');\n    } else if (registerPhone === '') {\n      setDisplayMessage('no-phone');\n    } else if (registerDOB === '') {\n      setDisplayMessage('no-date');\n    } else if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(registerEmail)) {\n      setDisplayMessage('invalid-email');\n    } else {\n      fetch('http://localhost:3001/user-form', {\n        method: 'post',\n        headers: { 'content-type': 'application/json' },\n        body: JSON.stringify({\n          name: registerName,\n          email: registerEmail,\n          phone: registerPhone,\n          dateofbirth: registerDOB,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data === 'unable-to-register') {\n            setDisplayMessage('unable-to-register');\n          } else if (data === 'email-exists') {\n            setDisplayMessage('email-exists');\n          } else if (data === 'invalid-phone') {\n            setDisplayMessage('invalid-phone');\n          } else {\n            props.onRequestUsers();\n            setDisplayMessage('success');\n            let list = document.getElementsByClassName('resetable');\n            for (let element of list) {\n              element.value = '';\n            }\n            setTimeout(() => {\n              props.changeRoute('displayForms');\n            }, 5000);\n          }\n        });\n    }\n  };\n\n  return (\n    <div>\n      <div className='center centerText'>\n        {displayMessage === 'success' ? (\n          <p className='f5 b success'>\n            Thanks for registering {registerName}. We have sent a confirmation mail to {registerEmail}\n            <br />\n            You will be automatically redirected to the form displaying page in 5 seconds.\n          </p>\n        ) : (\n          <p className='empty' />\n        )}\n      </div>\n      <article className='br4 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l shadow-5 mw5 center'>\n        <main className='pa4 black-80'>\n          <div className='measure'>\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n              <legend className='f2 fw6 ph0 mh0'>Register</legend>\n              <div className='mt3'>\n                <label className='db fw6 lh-copy f6 No-center' htmlFor='email-address'>\n                  Name\n                </label>\n                <input\n                  onChange={onNameChange}\n                  className='br3 pa2 input-reset ba bg-transparent hover-white w-100 resetable'\n                  type='text'\n                  name='name'\n                  id='name'\n                  required\n                />\n              </div>\n              <div className='mt3'>\n                <label className='db fw6 lh-copy f6 No-center' htmlFor='email-address'>\n                  Email\n                </label>\n                <input\n                  onChange={onEmailChange}\n                  className='br3 pa2 input-reset ba bg-transparent hover-white w-100 resetable'\n                  type='email'\n                  name='email-address'\n                  id='email-address'\n                  required\n                />\n              </div>\n              <div className='mv3'>\n                <label className='db fw6 lh-copy f6 No-center' htmlFor='phone'>\n                  Phone\n                </label>\n                <input\n                  onChange={onPhoneChange}\n                  className='br3 b pa2 input-reset ba bg-transparent hover-white w-100 resetable'\n                  type='tel'\n                  pattern='[0-9]{10}'\n                  name='phone'\n                  id='phone'\n                  required\n                />\n              </div>\n              <div className='mv3'>\n                <label className='db fw6 lh-copy f6 No-center' htmlFor='dob'>\n                  Date of Birth\n                </label>\n                <input\n                  onChange={onDOBChange}\n                  className='br3 b pa2 input-reset ba bg-transparent hover-white w-100 resetable'\n                  type='date'\n                  placeholder='2003-01-01'\n                  min={`${Number(new Date().toISOString().slice(0, 10).split('-')[0]) - 18}-${Number(\n                    new Date().toISOString().slice(0, 10).split('-')[1]\n                  )}-${Number(new Date().toISOString().slice(0, 10).split('-')[2])}`}\n                  max={new Date().toISOString().slice(0, 10)}\n                  name='dob'\n                  id='dob'\n                  required\n                />\n              </div>\n            </fieldset>\n            <div className='center centerText'>\n              <input\n                onClick={onSubmit}\n                className='br-pill b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\n                type='submit'\n                value='Register'\n              />\n            </div>\n            <div className='centerText center'>\n              {displayMessage === 'invalid-email' ? (\n                <p className='error'>Please enter a valid email address </p>\n              ) : displayMessage === 'no-email' ? (\n                <p className='error'>Please enter your email address </p>\n              ) : displayMessage === 'no-phone' ? (\n                <p className='error'>Please enter a Phone Number </p>\n              ) : displayMessage === 'no-name' ? (\n                <p className='error'>Please enter your name </p>\n              ) : displayMessage === 'email-exists' ? (\n                <p className='error'>There is already an account with this email address.</p>\n              ) : displayMessage === 'unable-to-register' ? (\n                <p className='error'>Unable to register </p>\n              ) : displayMessage === 'no-phone' ? (\n                <p className='error'>Please enter a Date of Birth </p>\n              ) : displayMessage === 'invalid-phone' ? (\n                <p className='error'>Please enter a valid 10 digit phone number </p>\n              ) : (\n                <p className='empty' />\n              )}\n            </div>\n          </div>\n        </main>\n      </article>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport './Navigation.css';\n\nconst Navigation = () => {\n  return (\n    <nav className='bb'>\n      <h1 className='pl3 top' height='90px' width='150px'>\n        StackFusion\n      </h1>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useState } from 'react';\nimport './Card.css';\n\nconst Card = (props) => {\n  const { name, id, email, phone, dateofbirth } = props;\n  const [isVisible, setIsVisible] = useState(false);\n  const onCardClick = () => {\n    if (isVisible === false) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n  return (\n    <div className='tc card dib br3 pa3 ma2 grow bw2 shadow-5' onClick={onCardClick}>\n      <img src={`https://robohash.org/${id}?set=set2`} alt={`${name} Profile Pic`} />\n      <div>\n        <h2>{name}</h2>\n        <div className={isVisible ? 'show' : 'hidden'}>\n          <p>\n            <span style={{ color: 'maroon' }}>Email:</span> {email}\n          </p>\n          <p>\n            <span style={{ color: 'maroon' }}>Phone:</span> {phone}\n          </p>\n          <p>\n            <span style={{ color: 'maroon' }}>Date of Birth:</span> {dateofbirth}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../Card/Card';\n\nconst CardsList = ({ users }) => {\n  let cardsArray = users.map((user) => {\n    return <Card key={user.id} id={user.id} name={user.name} email={user.email} phone={user.phone} dateofbirth={user.dateofbirth} />;\n  });\n  return cardsArray;\n};\n\nexport default CardsList;\n","import React from 'react';\nimport './SearchBox.css';\n\nconst SearchBox = ({ searchChange }) => {\n  return <input className='pa2 ba br-pill' type='search' placeholder='Search Users' onChange={searchChange} />;\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport './Scroll.css';\n\nconst Scroll = (props)=>{\n    return(\n        <div id=\"scroll\">\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_USERS_PENDING = 'REQUEST_USERS_PENDING';\nexport const REQUEST_USERS_SUCCESS = 'REQUEST_USERS_SUCCESS';\nexport const REQUEST_USERS_FAILED = 'REQUEST_USERS_FAILED';\n\nexport const ADD_USER = 'ADD_USER';\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport Register from './Components/Register/Register';\nimport Navigation from './Components/Navigation/Navigation';\nimport CardsList from './Components/CardsList/CardsList';\nimport SearchBox from './Components/SearchBox/SearchBox';\nimport { connect } from 'react-redux';\nimport Scroll from './Components/Scroll/Scroll';\nimport { setSearchField, requestUsers } from './actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchUsers.searchField,\n    users: state.requestUsers.users,\n    error: state.requestUsers.error,\n    isPending: state.requestUsers.isPending,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => {\n      dispatch(setSearchField(event.target.value));\n    },\n    onRequestUsers: () => {\n      dispatch(requestUsers()); //requestUsers(dispatch)    ALT\n    },\n  };\n};\n\nconst App = (props) => {\n  useEffect(() => {\n    props.onRequestUsers();\n    // eslint-disable-next-line\n  }, []);\n\n  const [route, setRoute] = useState('register');\n  const changeRoute = (route) => {\n    if (route === 'register') {\n      setRoute('register');\n    } else {\n      setRoute('displayForms');\n    }\n  };\n  let filteredUsers = props.users.filter((user) => {\n    return user.name.toLowerCase().includes(props.searchField.toLowerCase());\n  });\n  return (\n    <div className='App'>\n      <Navigation />\n      <div className='nav'>\n        <button\n          className='f6 grow no-underline br-pill ph3 pv2 mb2 dib near-black bg-white'\n          onClick={() => changeRoute('displayForms')}\n        >\n          Show users\n        </button>\n        <button\n          style={{ marginLeft: 'auto' }}\n          className='f6 grow no-underline br-pill ph3 pv2 mb2 dib near-black bg-white'\n          onClick={() => changeRoute('register')}\n        >\n          Register\n        </button>\n      </div>\n      {route === 'register' ? <Register onRequestUsers={props.onRequestUsers} changeRoute={changeRoute} /> : <br />}\n      {route === 'displayForms' ? (\n        <div className='centerText'>\n          <SearchBox searchChange={props.onSearchChange} />\n          <hr />\n          <Scroll>\n            <CardsList users={filteredUsers} />\n          </Scroll>\n        </div>\n      ) : (\n        <br />\n      )}\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { CHANGE_SEARCHFIELD, REQUEST_USERS_PENDING, REQUEST_USERS_SUCCESS, REQUEST_USERS_FAILED, ADD_USER } from './constants';\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCHFIELD,\n  payload: text,\n});\n//requestUsers = (dispatch) => {}          ALT_FOR_BELOW\nexport const requestUsers = () => (dispatch) => {\n  dispatch({ type: REQUEST_USERS_PENDING });\n  fetch('http://localhost:3001/users')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: REQUEST_USERS_SUCCESS, payload: data }))\n    .catch((error) => dispatch({ type: REQUEST_USERS_FAILED, payload: error }));\n};\n\nexport const addUser = (users) => ({\n  type: ADD_USER,\n  payload: users,\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHANGE_SEARCHFIELD, REQUEST_USERS_PENDING, REQUEST_USERS_SUCCESS, REQUEST_USERS_FAILED, ADD_USER } from './constants';\n\nconst initialStateSearch = {\n  searchField: '',\n};\n\nexport const searchUsers = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n\n    default:\n      return state;\n  }\n};\n\nconst initialStateUsers = {\n  isPending: false,\n  error: '',\n  users: [],\n};\n\nexport const requestUsers = (state = initialStateUsers, action = {}) => {\n  switch (action.type) {\n    case REQUEST_USERS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_USERS_SUCCESS:\n      return Object.assign({}, state, { isPending: false, users: action.payload });\n    case REQUEST_USERS_FAILED:\n      return Object.assign({}, state, { error: action.payload, isPending: false });\n    case ADD_USER:\n      return Object.assign({}, state, { users: action.payload });\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { searchUsers, requestUsers } from './reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchUsers, requestUsers });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}